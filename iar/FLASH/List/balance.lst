###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        15/Aug/2016  21:16:00
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\app\balance.c
#    Command line =  
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\app\balance.c -D LPLD_K60
#        -D USE_K60D10 -lCN
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\List\ -lB
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\List\ -o
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "F:\Program
#        Files\IAR_FOR_ARM\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\app\ -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\CPU\ -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\common\
#        -I E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\LPLD\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\LPLD\HW\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\FatFs\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\FatFs\option\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\USB\common\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\USB\driver\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\USB\descriptor\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\USB\class\
#        -Ol -I "F:\Program Files\IAR_FOR_ARM\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\List\balance.lst
#    Object file  =  
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\Obj\balance.o
#
###############################################################################

E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\app\balance.c
      1          #include "common.h"
      2          #include "direct.h"
      3          #include "init.h"
      4          #define My_Speed_Max 230
      5          #define My_Speed_Min 140
      6          
      7          void DIP_Switch(void);
      8          void show_info(void);
      9          
     10          extern uint32 oled_flag,speed_flag,direct_flag;
     11          extern float speed_avg,DirectSpeed,SA;
     12          extern float AD_result[5];
     13          extern float offset,backup_offset;
     14          extern uint8 speedgo_flag;
     15          extern uint32 oled_flag;
     16          extern float SpeedAlone_P1,SpeedAlone_P1;
     17          extern float SpeedAlone_D1,SpeedAlone_D1;
     18          extern float Speed_Set;
     19          extern float first_offset[3];
     20          extern float angle;
     21          
     22          extern int gyro_xMax;
     23          extern float speed_L,speed_R;
     24          extern float AD1Basic;
     25          extern float nowADBase;
     26          
     27          /*重要的变量定义*/

   \                                 In section .bss, align 4
     28          uint32 DIP_Ago_Value=0;
   \                     DIP_Ago_Value:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     29          uint32 DIP_Switch_Value=My_Speed_Min;
   \                     DIP_Switch_Value:
   \   00000000   0x0000008C         DC32 140

   \                                 In section .bss, align 4
     30          uint32 My_Start_Go=0;//主程序开始执行的标志
   \                     My_Start_Go:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     31          uint32 Init_Only_Once=0;//只初始化一次的标志
   \                     Init_Only_Once:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     32          uint32 My_Speed_Set=0;//设定的基本速度
   \                     My_Speed_Set:
   \   00000000                      DS8 4
     33          
     34          //主函数
     35          extern int runTime;
     36          extern uint8 stopFlag;

   \                                 In section .data, align 1
     37          uint8 stopCarSetFlag = 1;
   \                     stopCarSetFlag:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 1
     38          uint8 dChange = 19;
   \                     dChange:
   \   00000000   0x13               DC8 19

   \                                 In section .data, align 4
     39          int keyState = 7;
   \                     keyState:
   \   00000000   0x00000007         DC32 7

   \                                 In section .data, align 4
     40          int speedChangeTime = 1200;
   \                     speedChangeTime:
   \   00000000   0x000004B0         DC32 1200

   \                                 In section .data, align 1
     41          uint8 speedChangeFlag = 1;
   \                     speedChangeFlag:
   \   00000000   0x01               DC8 1

   \                                 In section .text, align 2, keep-with-next
     42          void main (void)
     43          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     44            
     45            init_gpio_Dip_Switch();//拨码开关初始化
   \   00000002   0x.... 0x....      BL       init_gpio_Dip_Switch
     46            init_gpio_key();//按键初始化 
   \   00000006   0x.... 0x....      BL       init_gpio_key
     47            init_gpio_StopCar();
   \   0000000A   0x.... 0x....      BL       init_gpio_StopCar
     48            init_gpio_beep();             //蜂鸣器的端口定义
   \   0000000E   0x.... 0x....      BL       init_gpio_beep
     49            LPLD_LPTMR_DelayMs(2000);
   \   00000012   0xF44F 0x60FA      MOV      R0,#+2000
   \   00000016   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     50            
     51            adc_init();                  //采样初始化
   \   0000001A   0x.... 0x....      BL       adc_init
     52            LPLD_MMA8451_Init();         //陀螺仪I2C协议定义
   \   0000001E   0x.... 0x....      BL       LPLD_MMA8451_Init
     53            get_0();                     //陀螺仪的开机采样
   \   00000022   0x.... 0x....      BL       get_0
     54            get_ad_once();
   \   00000026   0x.... 0x....      BL       get_ad_once
     55            init_gpio_oled();            //OLED的端口定义
   \   0000002A   0x.... 0x....      BL       init_gpio_oled
     56            LCD_Init();                  //OLED初始化
   \   0000002E   0x.... 0x....      BL       LCD_Init
     57            init_gpio_SpeedDirect();     //编码器方向端口定义
   \   00000032   0x.... 0x....      BL       init_gpio_SpeedDirect
     58            pwm_init();                  //电机初始化
   \   00000036   0x.... 0x....      BL       pwm_init
     59            DMA_Init();
   \   0000003A   0x.... 0x....      BL       DMA_Init
     60            GPIO_DMA_Init();             //测速初始化
   \   0000003E   0x.... 0x....      BL       GPIO_DMA_Init
     61            uart_init();                 //串口初始化
   \   00000042   0x.... 0x....      BL       uart_init
   \   00000046   0xE009             B.N      ??main_0
     62            //AD1Basic = 60;
     63            while((keyState=keyScan())!=6)
     64            {
     65              switch(keyState)
     66              {
     67              case 1:
     68                AD1Basic += 5;
     69                break;
     70              case 2:
     71                AD1Basic -= 2;
     72                break;
     73              case 3:
     74                if(dChange < 35 ) dChange++; 
     75                break;
     76              case 4:
     77                //if(dChange > 10 ) dChange--; 
     78                if(speedChangeFlag == 1) speedChangeFlag = 0;
     79                else speedChangeFlag = 1;
     80                break;
     81              case 5:{
     82                if(stopCarSetFlag == 1) stopCarSetFlag = 0;
     83                else stopCarSetFlag = 1;
     84              }
     85              break;
     86              default:break;
     87              }
     88              DIP_Switch();
   \                     ??main_1: (+1)
   \                     ??main_2: (+1)
   \   00000048   0x.... 0x....      BL       DIP_Switch
     89              get_ad();//电感采样
   \   0000004C   0x.... 0x....      BL       get_ad
     90              cal_offset();
   \   00000050   0x.... 0x....      BL       cal_offset
     91              GetMotorPulse();
   \   00000054   0x.... 0x....      BL       GetMotorPulse
     92              show_info();
   \   00000058   0x.... 0x....      BL       show_info
   \                     ??main_0: (+1)
   \   0000005C   0x.... 0x....      BL       keyScan
   \   00000060   0x....             LDR.N    R1,??DataTable2_6
   \   00000062   0x6008             STR      R0,[R1, #+0]
   \   00000064   0x2806             CMP      R0,#+6
   \   00000066   0xD03E             BEQ.N    ??main_3
   \   00000068   0x....             LDR.N    R0,??DataTable2_6
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0x2801             CMP      R0,#+1
   \   0000006E   0xD007             BEQ.N    ??main_4
   \   00000070   0xD3EA             BCC.N    ??main_1
   \   00000072   0x2803             CMP      R0,#+3
   \   00000074   0xD015             BEQ.N    ??main_5
   \   00000076   0xD30B             BCC.N    ??main_6
   \   00000078   0x2805             CMP      R0,#+5
   \   0000007A   0xD028             BEQ.N    ??main_7
   \   0000007C   0xD31B             BCC.N    ??main_8
   \   0000007E   0xE7E3             B.N      ??main_1
   \                     ??main_4: (+1)
   \   00000080   0x....             LDR.N    R0,??DataTable2_7
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x....             LDR.N    R1,??DataTable2_8  ;; 0x40a00000
   \   00000086   0x.... 0x....      BL       __aeabi_fadd
   \   0000008A   0x....             LDR.N    R1,??DataTable2_7
   \   0000008C   0x6008             STR      R0,[R1, #+0]
   \   0000008E   0xE7DB             B.N      ??main_2
   \                     ??main_6: (+1)
   \   00000090   0x....             LDR.N    R0,??DataTable2_7
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF05F 0x4140      MOVS     R1,#-1073741824
   \   00000098   0x.... 0x....      BL       __aeabi_fadd
   \   0000009C   0x....             LDR.N    R1,??DataTable2_7
   \   0000009E   0x6008             STR      R0,[R1, #+0]
   \   000000A0   0xE7D2             B.N      ??main_2
   \                     ??main_5: (+1)
   \   000000A2   0x....             LDR.N    R0,??DataTable2_9
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0x2823             CMP      R0,#+35
   \   000000A8   0xDA04             BGE.N    ??main_9
   \   000000AA   0x....             LDR.N    R0,??DataTable2_9
   \   000000AC   0x7800             LDRB     R0,[R0, #+0]
   \   000000AE   0x1C40             ADDS     R0,R0,#+1
   \   000000B0   0x....             LDR.N    R1,??DataTable2_9
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
   \                     ??main_9: (+1)
   \   000000B4   0xE7C8             B.N      ??main_2
   \                     ??main_8: (+1)
   \   000000B6   0x....             LDR.N    R0,??DataTable2_10
   \   000000B8   0x7800             LDRB     R0,[R0, #+0]
   \   000000BA   0x2801             CMP      R0,#+1
   \   000000BC   0xD103             BNE.N    ??main_10
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x....             LDR.N    R1,??DataTable2_10
   \   000000C2   0x7008             STRB     R0,[R1, #+0]
   \   000000C4   0xE002             B.N      ??main_11
   \                     ??main_10: (+1)
   \   000000C6   0x2001             MOVS     R0,#+1
   \   000000C8   0x....             LDR.N    R1,??DataTable2_10
   \   000000CA   0x7008             STRB     R0,[R1, #+0]
   \                     ??main_11: (+1)
   \   000000CC   0xE7BC             B.N      ??main_2
   \                     ??main_7: (+1)
   \   000000CE   0x....             LDR.N    R0,??DataTable2_11
   \   000000D0   0x7800             LDRB     R0,[R0, #+0]
   \   000000D2   0x2801             CMP      R0,#+1
   \   000000D4   0xD103             BNE.N    ??main_12
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x....             LDR.N    R1,??DataTable2_11
   \   000000DA   0x7008             STRB     R0,[R1, #+0]
   \   000000DC   0xE002             B.N      ??main_13
   \                     ??main_12: (+1)
   \   000000DE   0x2001             MOVS     R0,#+1
   \   000000E0   0x....             LDR.N    R1,??DataTable2_11
   \   000000E2   0x7008             STRB     R0,[R1, #+0]
   \                     ??main_13: (+1)
   \   000000E4   0xE7B0             B.N      ??main_2
     93            }
     94            LPLD_LPTMR_DelayMs(1000);
   \                     ??main_3: (+1)
   \   000000E6   0xF44F 0x707A      MOV      R0,#+1000
   \   000000EA   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     95            pit_init();                  //总定时器初始化
   \   000000EE   0x.... 0x....      BL       pit_init
     96            for(;;)
     97            {
     98              get_ad();//电感采样
   \                     ??main_14: (+1)
   \   000000F2   0x.... 0x....      BL       get_ad
     99              cal_offset();
   \   000000F6   0x.... 0x....      BL       cal_offset
    100              if(stopCarSetFlag==1 && !PTE26_I && runTime > 1000) 
   \   000000FA   0x....             LDR.N    R0,??DataTable2_11
   \   000000FC   0x7800             LDRB     R0,[R0, #+0]
   \   000000FE   0x2801             CMP      R0,#+1
   \   00000100   0xD1F7             BNE.N    ??main_14
   \   00000102   0x....             LDR.N    R0,??DataTable2_12  ;; 0x43fe2268
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0x2800             CMP      R0,#+0
   \   00000108   0xD1F3             BNE.N    ??main_14
   \   0000010A   0x....             LDR.N    R0,??DataTable2_13
   \   0000010C   0x6800             LDR      R0,[R0, #+0]
   \   0000010E   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000112   0xDDEE             BLE.N    ??main_14
    101              {
    102                stopFlag=1;
   \   00000114   0x2001             MOVS     R0,#+1
   \   00000116   0x....             LDR.N    R1,??DataTable2_14
   \   00000118   0x7008             STRB     R0,[R1, #+0]
   \   0000011A   0xE7EA             B.N      ??main_14
    103                //Motor_Stop();
    104                //DisableInterrupts;
    105              }
    106            }
    107          }
    108          //界面显示模块
    109          

   \                                 In section .text, align 2, keep-with-next
    110          void show_info(void)
    111          {
   \                     show_info: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    112            LCD_P6x8Str(1,0,"sp"); 
   \   00000002   0x....             ADR.N    R2,??DataTable2  ;; 0x73, 0x70, 0x00, 0x00
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       LCD_P6x8Str
    113            LCD_P6x8Str(1,1,"ADBasic:");
   \   0000000C   0x....             LDR.N    R2,??DataTable2_15
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       LCD_P6x8Str
    114            LCD_P6x8Str(1,2,"M:");
   \   00000016   0x....             ADR.N    R2,??DataTable2_1  ;; 0x4D, 0x3A, 0x00, 0x00
   \   00000018   0x2102             MOVS     R1,#+2
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x.... 0x....      BL       LCD_P6x8Str
    115            LCD_P6x8Str(1,3,"L_R:");
   \   00000020   0x....             LDR.N    R2,??DataTable2_16
   \   00000022   0x2103             MOVS     R1,#+3
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       LCD_P6x8Str
    116            Show_Number(20,0,(int)speed_L);//显示平均速度
   \   0000002A   0x....             LDR.N    R0,??DataTable2_17
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000032   0x0002             MOVS     R2,R0
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x2014             MOVS     R0,#+20
   \   00000038   0x.... 0x....      BL       Show_Number
    117            Show_Number(55,0,(int)speed_R);
   \   0000003C   0x....             LDR.N    R0,??DataTable2_18
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x.... 0x....      BL       __aeabi_f2iz
   \   00000044   0x0002             MOVS     R2,R0
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0x2037             MOVS     R0,#+55
   \   0000004A   0x.... 0x....      BL       Show_Number
    118            //Show_Number(90,0,(int)(SA*100));
    119            if(stopCarSetFlag == 1)
   \   0000004E   0x....             LDR.N    R0,??DataTable2_11
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0x2801             CMP      R0,#+1
   \   00000054   0xD105             BNE.N    ??show_info_0
    120            {
    121              LCD_P6x8Str(90,0,"YES");
   \   00000056   0x....             ADR.N    R2,??DataTable2_2  ;; "YES"
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0x205A             MOVS     R0,#+90
   \   0000005C   0x.... 0x....      BL       LCD_P6x8Str
   \   00000060   0xE004             B.N      ??show_info_1
    122            }else{
    123              LCD_P6x8Str(90,0,"NO ");
   \                     ??show_info_0: (+1)
   \   00000062   0x....             ADR.N    R2,??DataTable2_3  ;; "NO "
   \   00000064   0x2100             MOVS     R1,#+0
   \   00000066   0x205A             MOVS     R0,#+90
   \   00000068   0x.... 0x....      BL       LCD_P6x8Str
    124            }
    125            
    126            if(speedChangeFlag == 1)
   \                     ??show_info_1: (+1)
   \   0000006C   0x....             LDR.N    R0,??DataTable2_10
   \   0000006E   0x7800             LDRB     R0,[R0, #+0]
   \   00000070   0x2801             CMP      R0,#+1
   \   00000072   0xD105             BNE.N    ??show_info_2
    127            {
    128              LCD_P6x8Str(90,7,"1");
   \   00000074   0x....             ADR.N    R2,??DataTable2_4  ;; "1"
   \   00000076   0x2107             MOVS     R1,#+7
   \   00000078   0x205A             MOVS     R0,#+90
   \   0000007A   0x.... 0x....      BL       LCD_P6x8Str
   \   0000007E   0xE004             B.N      ??show_info_3
    129            }else{
    130              LCD_P6x8Str(90,7,"0");
   \                     ??show_info_2: (+1)
   \   00000080   0x....             ADR.N    R2,??DataTable2_5  ;; "0"
   \   00000082   0x2107             MOVS     R1,#+7
   \   00000084   0x205A             MOVS     R0,#+90
   \   00000086   0x.... 0x....      BL       LCD_P6x8Str
    131            }
    132            Show_Number(55,1,(int)AD1Basic);
   \                     ??show_info_3: (+1)
   \   0000008A   0x....             LDR.N    R0,??DataTable2_7
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000092   0x0002             MOVS     R2,R0
   \   00000094   0x2101             MOVS     R1,#+1
   \   00000096   0x2037             MOVS     R0,#+55
   \   00000098   0x.... 0x....      BL       Show_Number
    133            Show_Number(90,1,(int)nowADBase);
   \   0000009C   0x....             LDR.N    R0,??DataTable2_19
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0x.... 0x....      BL       __aeabi_f2iz
   \   000000A4   0x0002             MOVS     R2,R0
   \   000000A6   0x2101             MOVS     R1,#+1
   \   000000A8   0x205A             MOVS     R0,#+90
   \   000000AA   0x.... 0x....      BL       Show_Number
    134            Show_Number(55,2,(int)AD_result[1]);
   \   000000AE   0x....             LDR.N    R0,??DataTable2_20
   \   000000B0   0x6840             LDR      R0,[R0, #+4]
   \   000000B2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000B6   0x0002             MOVS     R2,R0
   \   000000B8   0x2102             MOVS     R1,#+2
   \   000000BA   0x2037             MOVS     R0,#+55
   \   000000BC   0x.... 0x....      BL       Show_Number
    135            
    136            Show_Number(27,3,(int)AD_result[0]);
   \   000000C0   0x....             LDR.N    R0,??DataTable2_20
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x.... 0x....      BL       __aeabi_f2iz
   \   000000C8   0x0002             MOVS     R2,R0
   \   000000CA   0x2103             MOVS     R1,#+3
   \   000000CC   0x201B             MOVS     R0,#+27
   \   000000CE   0x.... 0x....      BL       Show_Number
    137            Show_Number(90,3,(int)AD_result[2]);
   \   000000D2   0x....             LDR.N    R0,??DataTable2_20
   \   000000D4   0x6880             LDR      R0,[R0, #+8]
   \   000000D6   0x.... 0x....      BL       __aeabi_f2iz
   \   000000DA   0x0002             MOVS     R2,R0
   \   000000DC   0x2103             MOVS     R1,#+3
   \   000000DE   0x205A             MOVS     R0,#+90
   \   000000E0   0x.... 0x....      BL       Show_Number
    138          
    139            
    140            LCD_P6x8Str(1,4,"spSet:");
   \   000000E4   0x....             LDR.N    R2,??DataTable2_21
   \   000000E6   0x2104             MOVS     R1,#+4
   \   000000E8   0x2001             MOVS     R0,#+1
   \   000000EA   0x.... 0x....      BL       LCD_P6x8Str
    141            Show_Number(55,4,(int)(Speed_Set));
   \   000000EE   0x....             LDR.N    R0,??DataTable2_22
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000F6   0x0002             MOVS     R2,R0
   \   000000F8   0x2104             MOVS     R1,#+4
   \   000000FA   0x2037             MOVS     R0,#+55
   \   000000FC   0x.... 0x....      BL       Show_Number
    142            //Show_Number(55,4,(int)(My_Speed_Set));
    143            LCD_P6x8Str(1,5,"spDp:");
   \   00000100   0x....             LDR.N    R2,??DataTable2_23
   \   00000102   0x2105             MOVS     R1,#+5
   \   00000104   0x2001             MOVS     R0,#+1
   \   00000106   0x.... 0x....      BL       LCD_P6x8Str
    144            Show_Number(55,5,(int)(SpeedAlone_P1));
   \   0000010A   0x....             LDR.N    R0,??DataTable2_24
   \   0000010C   0x6800             LDR      R0,[R0, #+0]
   \   0000010E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000112   0x0002             MOVS     R2,R0
   \   00000114   0x2105             MOVS     R1,#+5
   \   00000116   0x2037             MOVS     R0,#+55
   \   00000118   0x.... 0x....      BL       Show_Number
    145            //Show_Number(90,5,(int)(SpeedAlone_D1));
    146            Show_Number(90,5,(int)(350*dChange));
   \   0000011C   0x....             LDR.N    R0,??DataTable2_9
   \   0000011E   0x7800             LDRB     R0,[R0, #+0]
   \   00000120   0xF44F 0x71AF      MOV      R1,#+350
   \   00000124   0xFB01 0xF200      MUL      R2,R1,R0
   \   00000128   0x2105             MOVS     R1,#+5
   \   0000012A   0x205A             MOVS     R0,#+90
   \   0000012C   0x.... 0x....      BL       Show_Number
    147            LCD_P6x8Str(1,6,"offset:");
   \   00000130   0x....             LDR.N    R2,??DataTable2_25
   \   00000132   0x2106             MOVS     R1,#+6
   \   00000134   0x2001             MOVS     R0,#+1
   \   00000136   0x.... 0x....      BL       LCD_P6x8Str
    148            Show_Number(55,6,(int)(offset*100));
   \   0000013A   0x....             LDR.N    R0,??DataTable2_26
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0x....             LDR.N    R1,??DataTable2_27  ;; 0x42c80000
   \   00000140   0x.... 0x....      BL       __aeabi_fmul
   \   00000144   0x.... 0x....      BL       __aeabi_f2iz
   \   00000148   0x0002             MOVS     R2,R0
   \   0000014A   0x2106             MOVS     R1,#+6
   \   0000014C   0x2037             MOVS     R0,#+55
   \   0000014E   0x.... 0x....      BL       Show_Number
    149            Show_Number(90,6,(int)(first_offset[1]*100));
   \   00000152   0x....             LDR.N    R0,??DataTable2_28
   \   00000154   0x6840             LDR      R0,[R0, #+4]
   \   00000156   0x....             LDR.N    R1,??DataTable2_27  ;; 0x42c80000
   \   00000158   0x.... 0x....      BL       __aeabi_fmul
   \   0000015C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000160   0x0002             MOVS     R2,R0
   \   00000162   0x2106             MOVS     R1,#+6
   \   00000164   0x205A             MOVS     R0,#+90
   \   00000166   0x.... 0x....      BL       Show_Number
    150            LCD_P6x8Str(1,7,"angle:");
   \   0000016A   0x....             LDR.N    R2,??DataTable2_29
   \   0000016C   0x2107             MOVS     R1,#+7
   \   0000016E   0x2001             MOVS     R0,#+1
   \   00000170   0x.... 0x....      BL       LCD_P6x8Str
    151            Show_Number(55,7,(int)(angle));
   \   00000174   0x....             LDR.N    R0,??DataTable2_30
   \   00000176   0x6800             LDR      R0,[R0, #+0]
   \   00000178   0x.... 0x....      BL       __aeabi_f2iz
   \   0000017C   0x0002             MOVS     R2,R0
   \   0000017E   0x2107             MOVS     R1,#+7
   \   00000180   0x2037             MOVS     R0,#+55
   \   00000182   0x.... 0x....      BL       Show_Number
    152          }
   \   00000186   0xBD01             POP      {R0,PC}          ;; return
    153          
    154          //开机时显示

   \                                 In section .text, align 2, keep-with-next
    155          void DIP_Switch()
    156          {
   \                     DIP_Switch: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    157            DIP_Switch_Value=Dip_Switch();//获取状态
   \   00000002   0x.... 0x....      BL       Dip_Switch
   \   00000006   0x....             LDR.N    R1,??DataTable2_31
   \   00000008   0x6008             STR      R0,[R1, #+0]
    158            //判断，设置速度值
    159            switch(DIP_Switch_Value)
   \   0000000A   0x....             LDR.N    R0,??DataTable2_31
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD00F             BEQ.N    ??DIP_Switch_0
   \   00000012   0x2802             CMP      R0,#+2
   \   00000014   0xD015             BEQ.N    ??DIP_Switch_1
   \   00000016   0xD310             BCC.N    ??DIP_Switch_2
   \   00000018   0x2804             CMP      R0,#+4
   \   0000001A   0xD01A             BEQ.N    ??DIP_Switch_3
   \   0000001C   0xD315             BCC.N    ??DIP_Switch_4
   \   0000001E   0x2806             CMP      R0,#+6
   \   00000020   0xD01F             BEQ.N    ??DIP_Switch_5
   \   00000022   0xD31A             BCC.N    ??DIP_Switch_6
   \   00000024   0x2808             CMP      R0,#+8
   \   00000026   0xD024             BEQ.N    ??DIP_Switch_7
   \   00000028   0xD31F             BCC.N    ??DIP_Switch_8
   \   0000002A   0x280A             CMP      R0,#+10
   \   0000002C   0xD029             BEQ.N    ??DIP_Switch_9
   \   0000002E   0xD324             BCC.N    ??DIP_Switch_10
   \   00000030   0xE02B             B.N      ??DIP_Switch_11
    160            {
    161            case 0:My_Speed_Set=My_Speed_Min;break;//120
   \                     ??DIP_Switch_0: (+1)
   \   00000032   0x208C             MOVS     R0,#+140
   \   00000034   0x....             LDR.N    R1,??DataTable2_32
   \   00000036   0x6008             STR      R0,[R1, #+0]
   \   00000038   0xE02A             B.N      ??DIP_Switch_12
    162            case 1:My_Speed_Set=My_Speed_Min+10;break;//130
   \                     ??DIP_Switch_2: (+1)
   \   0000003A   0x2096             MOVS     R0,#+150
   \   0000003C   0x....             LDR.N    R1,??DataTable2_32
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \   00000040   0xE026             B.N      ??DIP_Switch_12
    163            case 2:My_Speed_Set=My_Speed_Min+20;break;//140
   \                     ??DIP_Switch_1: (+1)
   \   00000042   0x20A0             MOVS     R0,#+160
   \   00000044   0x....             LDR.N    R1,??DataTable2_32
   \   00000046   0x6008             STR      R0,[R1, #+0]
   \   00000048   0xE022             B.N      ??DIP_Switch_12
    164            case 3:My_Speed_Set=My_Speed_Min+30;break;//150
   \                     ??DIP_Switch_4: (+1)
   \   0000004A   0x20AA             MOVS     R0,#+170
   \   0000004C   0x....             LDR.N    R1,??DataTable2_32
   \   0000004E   0x6008             STR      R0,[R1, #+0]
   \   00000050   0xE01E             B.N      ??DIP_Switch_12
    165            case 4:My_Speed_Set=My_Speed_Min+40;break;//160
   \                     ??DIP_Switch_3: (+1)
   \   00000052   0x20B4             MOVS     R0,#+180
   \   00000054   0x....             LDR.N    R1,??DataTable2_32
   \   00000056   0x6008             STR      R0,[R1, #+0]
   \   00000058   0xE01A             B.N      ??DIP_Switch_12
    166            case 5:My_Speed_Set=My_Speed_Min+50;break;//170
   \                     ??DIP_Switch_6: (+1)
   \   0000005A   0x20BE             MOVS     R0,#+190
   \   0000005C   0x....             LDR.N    R1,??DataTable2_32
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   \   00000060   0xE016             B.N      ??DIP_Switch_12
    167            case 6:My_Speed_Set=My_Speed_Min+60;break;//180
   \                     ??DIP_Switch_5: (+1)
   \   00000062   0x20C8             MOVS     R0,#+200
   \   00000064   0x....             LDR.N    R1,??DataTable2_32
   \   00000066   0x6008             STR      R0,[R1, #+0]
   \   00000068   0xE012             B.N      ??DIP_Switch_12
    168            case 7:My_Speed_Set=My_Speed_Min+70;break;//180
   \                     ??DIP_Switch_8: (+1)
   \   0000006A   0x20D2             MOVS     R0,#+210
   \   0000006C   0x....             LDR.N    R1,??DataTable2_32
   \   0000006E   0x6008             STR      R0,[R1, #+0]
   \   00000070   0xE00E             B.N      ??DIP_Switch_12
    169            case 8:My_Speed_Set=My_Speed_Min+80;break;//180
   \                     ??DIP_Switch_7: (+1)
   \   00000072   0x20DC             MOVS     R0,#+220
   \   00000074   0x....             LDR.N    R1,??DataTable2_32
   \   00000076   0x6008             STR      R0,[R1, #+0]
   \   00000078   0xE00A             B.N      ??DIP_Switch_12
    170            case 9:My_Speed_Set=My_Speed_Min+90;break;//180
   \                     ??DIP_Switch_10: (+1)
   \   0000007A   0x20E6             MOVS     R0,#+230
   \   0000007C   0x....             LDR.N    R1,??DataTable2_32
   \   0000007E   0x6008             STR      R0,[R1, #+0]
   \   00000080   0xE006             B.N      ??DIP_Switch_12
    171            case 10:My_Speed_Set=My_Speed_Min+100;break;//180
   \                     ??DIP_Switch_9: (+1)
   \   00000082   0x20F0             MOVS     R0,#+240
   \   00000084   0x....             LDR.N    R1,??DataTable2_32
   \   00000086   0x6008             STR      R0,[R1, #+0]
   \   00000088   0xE002             B.N      ??DIP_Switch_12
    172            default:My_Speed_Set=My_Speed_Max;break;
   \                     ??DIP_Switch_11: (+1)
   \   0000008A   0x20E6             MOVS     R0,#+230
   \   0000008C   0x....             LDR.N    R1,??DataTable2_32
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    173            }
    174            //限制速度
    175            if(My_Speed_Set>My_Speed_Max)
   \                     ??DIP_Switch_12: (+1)
   \   00000090   0x....             LDR.N    R0,??DataTable2_32
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0x28E7             CMP      R0,#+231
   \   00000096   0xD302             BCC.N    ??DIP_Switch_13
    176            {
    177              My_Speed_Set=My_Speed_Max;//180
   \   00000098   0x20E6             MOVS     R0,#+230
   \   0000009A   0x....             LDR.N    R1,??DataTable2_32
   \   0000009C   0x6008             STR      R0,[R1, #+0]
    178            }
    179          //  if(My_Speed_Set!=DIP_Ago_Value)
    180          //  {
    181          //    LCD_CLS();//清屏
    182          //    LCD_P8x16Str(0,2,"MySpeed:");
    183          //    Show_Number(64,3,My_Speed_Set);
    184          //  }
    185          //  DIP_Ago_Value=My_Speed_Set;//更新历史值
    186          }
   \                     ??DIP_Switch_13: (+1)
   \   0000009E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x73 0x70          DC8      0x73, 0x70, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x4D 0x3A          DC8      0x4D, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x59 0x45          DC8      "YES"
   \              0x53 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x4E 0x4F          DC8      "NO "
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x31 0x00          DC8      "1",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     keyState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     AD1Basic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x40A00000         DC32     0x40a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     dChange

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     speedChangeFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     stopCarSetFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x43FE2268         DC32     0x43fe2268

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     runTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     stopFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x........         DC32     speed_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     nowADBase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x........         DC32     AD_result

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x........         DC32     Speed_Set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x........         DC32     SpeedAlone_P1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_26:
   \   00000000   0x........         DC32     offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_27:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_28:
   \   00000000   0x........         DC32     first_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_29:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_30:
   \   00000000   0x........         DC32     angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_31:
   \   00000000   0x........         DC32     DIP_Switch_Value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_32:
   \   00000000   0x........         DC32     My_Speed_Set

   \                                 In section .rodata, align 4
   \   00000000   0x73 0x70          DC8 "sp"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x41 0x44          DC8 "ADBasic:"
   \              0x42 0x61    
   \              0x73 0x69    
   \              0x63 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x3A          DC8 "M:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x4C 0x5F          DC8 "L_R:"
   \              0x52 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x59 0x45          DC8 "YES"
   \              0x53 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4E 0x4F          DC8 "NO "
   \              0x20 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x31 0x00          DC8 "1"

   \                                 In section .rodata, align 2
   \   00000000   0x30 0x00          DC8 "0"

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x73 0x70          DC8 "spSet:"
   \              0x53 0x65    
   \              0x74 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x73 0x70          DC8 "spDp:"
   \              0x44 0x70    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x6F 0x66          DC8 "offset:"
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x61 0x6E          DC8 "angle:"
   \              0x67 0x6C    
   \              0x65 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DIP_Switch
         8   -> Dip_Switch
       8   main
         8   -> DIP_Switch
         8   -> DMA_Init
         8   -> GPIO_DMA_Init
         8   -> GetMotorPulse
         8   -> LCD_Init
         8   -> LPLD_LPTMR_DelayMs
         8   -> LPLD_MMA8451_Init
         8   -> __aeabi_fadd
         8   -> adc_init
         8   -> cal_offset
         8   -> get_0
         8   -> get_ad
         8   -> get_ad_once
         8   -> init_gpio_Dip_Switch
         8   -> init_gpio_SpeedDirect
         8   -> init_gpio_StopCar
         8   -> init_gpio_beep
         8   -> init_gpio_key
         8   -> init_gpio_oled
         8   -> keyScan
         8   -> pit_init
         8   -> pwm_init
         8   -> show_info
         8   -> uart_init
       8   show_info
         8   -> LCD_P6x8Str
         8   -> Show_Number
         8   -> __aeabi_f2iz
         8   -> __aeabi_fmul


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_26
       4  ??DataTable2_27
       4  ??DataTable2_28
       4  ??DataTable2_29
       4  ??DataTable2_3
       4  ??DataTable2_30
       4  ??DataTable2_31
       4  ??DataTable2_32
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ?_0
      12  ?_1
       8  ?_10
       8  ?_11
       4  ?_2
       8  ?_3
       4  ?_4
       4  ?_5
       2  ?_6
       2  ?_7
       8  ?_8
       8  ?_9
       4  DIP_Ago_Value
     160  DIP_Switch
       4  DIP_Switch_Value
       4  Init_Only_Once
       4  My_Speed_Set
       4  My_Start_Go
       1  dChange
       4  keyState
     284  main
     392  show_info
       1  speedChangeFlag
       4  speedChangeTime
       1  stopCarSetFlag

 
  16 bytes in section .bss
  15 bytes in section .data
  72 bytes in section .rodata
 968 bytes in section .text
 
 968 bytes of CODE  memory
  72 bytes of CONST memory
  31 bytes of DATA  memory

Errors: none
Warnings: 2
