###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        15/Aug/2016  15:07:12
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\app\gpio.c
#    Command line =  
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\app\gpio.c -D LPLD_K60 -D
#        USE_K60D10 -lCN
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\List\ -lB
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\List\ -o
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "F:\Program
#        Files\IAR_FOR_ARM\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\app\ -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\CPU\ -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\common\
#        -I E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\LPLD\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\LPLD\HW\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\FatFs\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\FatFs\option\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\USB\common\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\USB\driver\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\USB\descriptor\
#        -I
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\..\..\..\lib\USB\class\
#        -Ol -I "F:\Program Files\IAR_FOR_ARM\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\List\gpio.lst
#    Object file  =  
#        E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\iar\FLASH\Obj\gpio.o
#
###############################################################################

E:\LPLD_OSKinetis_V3.1\project\balanceNewCar\app\gpio.c
      1          #include "gpio.h"
      2          

   \                                 In section .bss, align 4
      3          GPIO_InitTypeDef gpio_init_struct_beep;//蜂鸣器
   \                     gpio_init_struct_beep:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      4          GPIO_InitTypeDef gpio_init_struct_SpeedDirect_Left;//编码器左轮
   \                     gpio_init_struct_SpeedDirect_Left:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      5          GPIO_InitTypeDef gpio_init_struct_SpeedDirect_Right;//编码器右轮
   \                     gpio_init_struct_SpeedDirect_Right:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      6          GPIO_InitTypeDef gpio_init_struct_StopCar;//停车检测口
   \                     gpio_init_struct_StopCar:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      7          GPIO_InitTypeDef gpio_init_struct_Dip_Switch;//拨码开关
   \                     gpio_init_struct_Dip_Switch:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      8          FTM_InitTypeDef ftm_init_struct;
   \                     ftm_init_struct:
   \   00000000                      DS8 28
      9          //电机pwm初始化

   \                                 In section .text, align 2, keep-with-next
     10          void pwm_init(void)
     11          {
   \                     pwm_init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     12            ftm_init_struct.FTM_Ftmx = FTM0;	//使能FTM0通道
   \   00000002   0x....             LDR.N    R0,??DataTable5  ;; 0x40038000
   \   00000004   0x....             LDR.N    R1,??DataTable5_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
     13            ftm_init_struct.FTM_Mode = FTM_MODE_PWM;	//使能PWM模式
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable5_1
   \   0000000C   0x7108             STRB     R0,[R1, #+4]
     14            ftm_init_struct.FTM_PwmFreq = 9000;	//PWM频率2KHz
   \   0000000E   0xF242 0x3028      MOVW     R0,#+9000
   \   00000012   0x....             LDR.N    R1,??DataTable5_1
   \   00000014   0x6088             STR      R0,[R1, #+8]
     15            LPLD_FTM_Init(ftm_init_struct);
   \   00000016   0x....             LDR.N    R1,??DataTable5_1
   \   00000018   0xB084             SUB      SP,SP,#+16
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x221C             MOVS     R2,#+28
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000022   0xBC0F             POP      {R0-R3}
   \   00000024   0x.... 0x....      BL       LPLD_FTM_Init
     16            
     17            LPLD_FTM_PWM_Enable(FTM0,FTM_Ch0,0, PTC1,ALIGN_LEFT);//左正向
   \   00000028   0x2028             MOVS     R0,#+40
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x233D             MOVS     R3,#+61
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x....             LDR.N    R0,??DataTable5  ;; 0x40038000
   \   00000034   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     18            LPLD_FTM_PWM_Enable(FTM0,FTM_Ch1,0, PTC2,ALIGN_LEFT); //左反向:
   \   00000038   0x2028             MOVS     R0,#+40
   \   0000003A   0x9000             STR      R0,[SP, #+0]
   \   0000003C   0x233E             MOVS     R3,#+62
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x....             LDR.N    R0,??DataTable5  ;; 0x40038000
   \   00000044   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     19            LPLD_FTM_PWM_Enable(FTM0,FTM_Ch2,0, PTC3,ALIGN_LEFT);//右正向:
   \   00000048   0x2028             MOVS     R0,#+40
   \   0000004A   0x9000             STR      R0,[SP, #+0]
   \   0000004C   0x233F             MOVS     R3,#+63
   \   0000004E   0x2200             MOVS     R2,#+0
   \   00000050   0x2102             MOVS     R1,#+2
   \   00000052   0x....             LDR.N    R0,??DataTable5  ;; 0x40038000
   \   00000054   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     20            LPLD_FTM_PWM_Enable(FTM0,FTM_Ch3,0, PTC4,ALIGN_LEFT);//右反向
   \   00000058   0x2028             MOVS     R0,#+40
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0x2340             MOVS     R3,#+64
   \   0000005E   0x2200             MOVS     R2,#+0
   \   00000060   0x2103             MOVS     R1,#+3
   \   00000062   0x....             LDR.N    R0,??DataTable5  ;; 0x40038000
   \   00000064   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     21          }
   \   00000068   0xBD07             POP      {R0-R2,PC}       ;; return
     22          //蜂鸣器初始化

   \                                 In section .text, align 2, keep-with-next
     23          void init_gpio_beep()
     24          {
   \                     init_gpio_beep: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     25            gpio_init_struct_beep.GPIO_PTx = PTC;
   \   00000002   0x....             LDR.N    R0,??DataTable5_2  ;; 0x400ff080
   \   00000004   0x....             LDR.N    R1,??DataTable5_3
   \   00000006   0x6008             STR      R0,[R1, #+0]
     26            gpio_init_struct_beep.GPIO_Pins = GPIO_Pin5;
   \   00000008   0x2020             MOVS     R0,#+32
   \   0000000A   0x....             LDR.N    R1,??DataTable5_3
   \   0000000C   0x6048             STR      R0,[R1, #+4]
     27            gpio_init_struct_beep.GPIO_Dir = DIR_OUTPUT;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x....             LDR.N    R1,??DataTable5_3
   \   00000012   0x7308             STRB     R0,[R1, #+12]
     28            gpio_init_struct_beep.GPIO_PinControl = IRQC_DIS;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR.N    R1,??DataTable5_3
   \   00000018   0x6088             STR      R0,[R1, #+8]
     29            LPLD_GPIO_Init(gpio_init_struct_beep);
   \   0000001A   0x....             LDR.N    R1,??DataTable5_3
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x2214             MOVS     R2,#+20
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Init
     30          } 
   \   0000002C   0xBD01             POP      {R0,PC}          ;; return
     31          //测速方向口初始化

   \                                 In section .text, align 2, keep-with-next
     32          void init_gpio_SpeedDirect()
     33          {
   \                     init_gpio_SpeedDirect: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     34            //左轮方向口
     35            gpio_init_struct_SpeedDirect_Left.GPIO_PTx=PTB;
   \   00000002   0x....             LDR.N    R0,??DataTable5_4  ;; 0x400ff040
   \   00000004   0x....             LDR.N    R1,??DataTable5_5
   \   00000006   0x6008             STR      R0,[R1, #+0]
     36            gpio_init_struct_SpeedDirect_Left.GPIO_Pins=GPIO_Pin9;
   \   00000008   0xF44F 0x7000      MOV      R0,#+512
   \   0000000C   0x....             LDR.N    R1,??DataTable5_5
   \   0000000E   0x6048             STR      R0,[R1, #+4]
     37            gpio_init_struct_SpeedDirect_Left.GPIO_Dir=DIR_INPUT;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable5_5
   \   00000014   0x7308             STRB     R0,[R1, #+12]
     38            gpio_init_struct_SpeedDirect_Left.GPIO_PinControl = IRQC_DIS;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable5_5
   \   0000001A   0x6088             STR      R0,[R1, #+8]
     39            LPLD_GPIO_Init(gpio_init_struct_SpeedDirect_Left);
   \   0000001C   0x....             LDR.N    R1,??DataTable5_5
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_Init
     40            //右轮方向口
     41            gpio_init_struct_SpeedDirect_Right.GPIO_PTx=PTC;
   \   0000002E   0x....             LDR.N    R0,??DataTable5_2  ;; 0x400ff080
   \   00000030   0x....             LDR.N    R1,??DataTable5_6
   \   00000032   0x6008             STR      R0,[R1, #+0]
     42            gpio_init_struct_SpeedDirect_Right.GPIO_Pins=GPIO_Pin16;
   \   00000034   0xF45F 0x3080      MOVS     R0,#+65536
   \   00000038   0x....             LDR.N    R1,??DataTable5_6
   \   0000003A   0x6048             STR      R0,[R1, #+4]
     43            gpio_init_struct_SpeedDirect_Right.GPIO_Dir=DIR_INPUT;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x....             LDR.N    R1,??DataTable5_6
   \   00000040   0x7308             STRB     R0,[R1, #+12]
     44            gpio_init_struct_SpeedDirect_Right.GPIO_PinControl = IRQC_DIS;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x....             LDR.N    R1,??DataTable5_6
   \   00000046   0x6088             STR      R0,[R1, #+8]
     45            LPLD_GPIO_Init(gpio_init_struct_SpeedDirect_Right);
   \   00000048   0x....             LDR.N    R1,??DataTable5_6
   \   0000004A   0xB084             SUB      SP,SP,#+16
   \   0000004C   0x4668             MOV      R0,SP
   \   0000004E   0x2214             MOVS     R2,#+20
   \   00000050   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000054   0xBC0F             POP      {R0-R3}
   \   00000056   0x.... 0x....      BL       LPLD_GPIO_Init
     46          }
   \   0000005A   0xBD01             POP      {R0,PC}          ;; return
     47          

   \                                 In section .text, align 2, keep-with-next
     48          void init_gpio_StopCar()
     49          {
   \                     init_gpio_StopCar: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     50            //干簧管
     51            gpio_init_struct_StopCar.GPIO_PTx=PTE;
   \   00000002   0x....             LDR.N    R0,??DataTable5_7  ;; 0x400ff100
   \   00000004   0x....             LDR.N    R1,??DataTable5_8
   \   00000006   0x6008             STR      R0,[R1, #+0]
     52            gpio_init_struct_StopCar.GPIO_Pins=GPIO_Pin26;
   \   00000008   0xF05F 0x6080      MOVS     R0,#+67108864
   \   0000000C   0x....             LDR.N    R1,??DataTable5_8
   \   0000000E   0x6048             STR      R0,[R1, #+4]
     53            gpio_init_struct_StopCar.GPIO_Dir=DIR_INPUT;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable5_8
   \   00000014   0x7308             STRB     R0,[R1, #+12]
     54            gpio_init_struct_StopCar.GPIO_PinControl = IRQC_DIS;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable5_8
   \   0000001A   0x6088             STR      R0,[R1, #+8]
     55            LPLD_GPIO_Init(gpio_init_struct_StopCar);
   \   0000001C   0x....             LDR.N    R1,??DataTable5_8
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_Init
     56          }
   \   0000002E   0xBD01             POP      {R0,PC}          ;; return
     57          //拨码开关口初始化

   \                                 In section .text, align 2, keep-with-next
     58          void init_gpio_Dip_Switch()   //B:10、11、16、17
     59          {
   \                     init_gpio_Dip_Switch: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     60            gpio_init_struct_Dip_Switch.GPIO_PTx = PTB;
   \   00000002   0x....             LDR.N    R0,??DataTable5_4  ;; 0x400ff040
   \   00000004   0x....             LDR.N    R1,??DataTable5_9
   \   00000006   0x6008             STR      R0,[R1, #+0]
     61            gpio_init_struct_Dip_Switch.GPIO_Pins = GPIO_Pin10|GPIO_Pin11|GPIO_Pin16|GPIO_Pin17;
   \   00000008   0xF45F 0x3043      MOVS     R0,#+199680
   \   0000000C   0x....             LDR.N    R1,??DataTable5_9
   \   0000000E   0x6048             STR      R0,[R1, #+4]
     62            gpio_init_struct_Dip_Switch.GPIO_Dir = DIR_OUTPUT;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x....             LDR.N    R1,??DataTable5_9
   \   00000014   0x7308             STRB     R0,[R1, #+12]
     63            gpio_init_struct_Dip_Switch.GPIO_Output = OUTPUT_H;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable5_9
   \   0000001A   0x7348             STRB     R0,[R1, #+13]
     64            gpio_init_struct_Dip_Switch.GPIO_PinControl = IRQC_DIS;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR.N    R1,??DataTable5_9
   \   00000020   0x6088             STR      R0,[R1, #+8]
     65            LPLD_GPIO_Init(gpio_init_struct_Dip_Switch);
   \   00000022   0x....             LDR.N    R1,??DataTable5_9
   \   00000024   0xB084             SUB      SP,SP,#+16
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x2214             MOVS     R2,#+20
   \   0000002A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002E   0xBC0F             POP      {R0-R3}
   \   00000030   0x.... 0x....      BL       LPLD_GPIO_Init
     66          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return
     67          
     68          //扫描拨码开关，设置相关速度

   \                                 In section .text, align 2, keep-with-next
     69          uint32 Dip_Switch()
     70          {
     71            uint32 Switch_Value=0;
   \                     Dip_Switch: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
     72            if(!dip_0)
   \   00000002   0x....             LDR.N    R1,??DataTable5_10  ;; 0x43fe0a44
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD100             BNE.N    ??Dip_Switch_0
     73            {
     74              Switch_Value+=1;
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
     75            }
     76            if(!dip_1)
   \                     ??Dip_Switch_0: (+1)
   \   0000000C   0x....             LDR.N    R1,??DataTable5_11  ;; 0x43fe0a40
   \   0000000E   0x6809             LDR      R1,[R1, #+0]
   \   00000010   0x2900             CMP      R1,#+0
   \   00000012   0xD100             BNE.N    ??Dip_Switch_1
     77            {
     78              Switch_Value+=2;
   \   00000014   0x1C80             ADDS     R0,R0,#+2
     79            }
     80            if(!dip_2)
   \                     ??Dip_Switch_1: (+1)
   \   00000016   0x....             LDR.N    R1,??DataTable5_12  ;; 0x43fe0a2c
   \   00000018   0x6809             LDR      R1,[R1, #+0]
   \   0000001A   0x2900             CMP      R1,#+0
   \   0000001C   0xD100             BNE.N    ??Dip_Switch_2
     81            {
     82              Switch_Value+=4;
   \   0000001E   0x1D00             ADDS     R0,R0,#+4
     83            }
     84            if(!dip_3)
   \                     ??Dip_Switch_2: (+1)
   \   00000020   0x....             LDR.N    R1,??DataTable5_13  ;; 0x43fe0a28
   \   00000022   0x6809             LDR      R1,[R1, #+0]
   \   00000024   0x2900             CMP      R1,#+0
   \   00000026   0xD100             BNE.N    ??Dip_Switch_3
     85            {
     86              Switch_Value+=8;
   \   00000028   0x3008             ADDS     R0,R0,#+8
     87            }
     88            return Switch_Value;
   \                     ??Dip_Switch_3: (+1)
   \   0000002A   0x4770             BX       LR               ;; return
     89          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     ftm_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     gpio_init_struct_beep

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     gpio_init_struct_SpeedDirect_Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     gpio_init_struct_SpeedDirect_Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     gpio_init_struct_StopCar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     gpio_init_struct_Dip_Switch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x43FE0A44         DC32     0x43fe0a44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x43FE0A40         DC32     0x43fe0a40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x43FE0A2C         DC32     0x43fe0a2c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x43FE0A28         DC32     0x43fe0a28

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Dip_Switch
      24   init_gpio_Dip_Switch
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4
      24   init_gpio_SpeedDirect
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4
      24   init_gpio_StopCar
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4
      24   init_gpio_beep
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4
      32   pwm_init
        16   -> LPLD_FTM_Init
        16   -> LPLD_FTM_PWM_Enable
        32   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      44  Dip_Switch
      28  ftm_init_struct
      20  gpio_init_struct_Dip_Switch
      20  gpio_init_struct_SpeedDirect_Left
      20  gpio_init_struct_SpeedDirect_Right
      20  gpio_init_struct_StopCar
      20  gpio_init_struct_beep
      54  init_gpio_Dip_Switch
      92  init_gpio_SpeedDirect
      48  init_gpio_StopCar
      46  init_gpio_beep
     106  pwm_init

 
 128 bytes in section .bss
 446 bytes in section .text
 
 446 bytes of CODE memory
 128 bytes of DATA memory

Errors: none
Warnings: none
